version: 0.2

env:
  variables:
    AWS_REGION: us-east-2
    AWS_ACCOUNT_ID: 679625722040 # Pode ser removido se o CodeBuild injetar automaticamente
    ECR_REPOSITORY_NAME: crm-api-repo

phases:
  install:
    runtime-versions:
      docker: 20 # Garante que a versão do Docker seja 20
    commands:
      - echo "Atualizando pacotes e instalando .NET SDK 8.0..."
      - apt-get update -y
      - apt-get install -y apt-transport-https
      - wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      - dpkg -i packages-microsoft-prod.deb
      - apt-get update -y
      - apt-get install -y dotnet-sdk-8.0
      - dotnet --version 

      - echo "Instalando utilitário zip..."
      - apt-get install -y zip

  pre_build:
    commands:
      - echo "Realizando login no Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      - echo "Restaurando dependências .NET para a solução principal..."
      - dotnet restore src/CRM-API.sln || exit 1

      - echo "Compilando solução principal CRM-API.sln..."
      - dotnet build src/CRM-API.sln --no-restore --configuration Release || exit 1

      - echo "Executando testes unitários..."
      - dotnet test src/CRM.Tests/CRM.Tests.csproj --no-build --verbosity normal --configuration Release || exit 1

      - echo "Preparando imagem Docker para o ECR..."
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

      - echo "Build da imagem com tag: $IMAGE_TAG"
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG -f Dockerfile . || exit 1

      - echo "Enviando imagem com tag: $IMAGE_TAG"
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG

      - echo "Tag 'latest' sendo aplicada..."
      - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:latest

      - echo "Gerando arquivo Dockerrun.aws.json..."
      - |
        cat > Dockerrun.aws.json <<EOF
        {
          "AWSEBDockerrunVersion": "1",
          "Image": {
            "Name": "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:latest",
            "Update": "true"
          },
          "Ports": [
            {
              "ContainerPort": 80
            }
          ],
          "Logging": "/var/log/nginx"
        }
        EOF

      - echo "Arquivo Dockerrun.aws.json criado com sucesso!"

      - echo "Compactando pacote de deploy..."
      - zip -r deploy.zip Dockerrun.aws.json

artifacts:
  files:
    - deploy.zip
  discard-paths: yes
